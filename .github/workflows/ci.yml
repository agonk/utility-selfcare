name: CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:18-alpine
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: selfcare_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:8.2-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, dom, fileinfo, pgsql, redis
        coverage: xdebug

    - name: Get composer cache directory
      working-directory: ./backend
      run: echo "COMPOSER_CACHE_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV

    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ env.COMPOSER_CACHE_DIR }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Dependencies
      working-directory: ./backend
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Copy .env
      working-directory: ./backend
      run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

    - name: Generate key
      working-directory: ./backend
      run: php artisan key:generate

    - name: Run Migrations
      working-directory: ./backend
      env:
        DB_HOST: localhost
        DB_PORT: 5432
      run: php artisan migrate --force

    - name: Run Tests
      working-directory: ./backend
      env:
        DB_HOST: localhost
        DB_PORT: 5432
      run: ./vendor/bin/pest --coverage

    - name: Run PHPStan
      working-directory: ./backend
      run: ./vendor/bin/phpstan analyse

    - name: Run Laravel Pint
      working-directory: ./backend
      run: ./vendor/bin/pint --test